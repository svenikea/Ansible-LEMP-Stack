server {
    listen       80;
    server_name  {{ item.servername }};
    return 301 https://$server_name$request_uri;
}

server {

	listen 443;
	server_name {{ item.servername }};

	error_page 404 /404;

    auth_basic  "{{ item.servername }}";
    auth_basic_user_file /etc/nginx/authentication/.htpasswd.{{ item.servername }}.{{ item.fulldomainname }};

    access_log /var/log/nginx/{{ item.servername }}.{{ item.fulldomainname }}.access.log;
    error_log /var/log/nginx/{{ item.servername }}.{{ item.fulldomainname }}.error.log;

	ssl on;
    ssl_certificate      /etc/nginx/certs/{{ item.fulldomainname }}/{{ item.domainname }}_bundle.crt;
    ssl_certificate_key  /etc/nginx/certs/{{ item.fulldomainname }}/{{ item.domainname }}.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2;
    ssl_verify_client off;
    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers on;

	location / {
	   # Enable CORS
           if ($request_method = OPTIONS ) {
           add_header       Access-Control-Allow-Origin "*";
           add_header       Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, PATCH, DELETE";
           add_header       Access-Control-Allow-Headers "*";
           add_header       Access-Control-Allow-Credentials "true";
           add_header       Content-Length 0;
           add_header       Content-Type text/plain;
           return           200;
      }
	   # Proxy by_pass
	   proxy_redirect off;
	   proxy_set_header X-Real-IP $remote_addr;
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	   proxy_set_header Host $http_host;
	   proxy_set_header X-Forwarded-Proto https;
       proxy_pass https://{{ item.IpAdresss }};
       proxy_http_version 1.1;
	   proxy_set_header Upgrade $http_upgrade;
	   proxy_set_header Connection "upgrade";
	   proxy_read_timeout 86400;

}
}

