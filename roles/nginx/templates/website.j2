#jinja2: trim_blocks: "true", lstrip_blocks: "false"
server {
    listen      80;
    listen      [::]:80;   
    {% if inventory_hostname in groups['wordpress_servers'] %}
    server_name www.{{ fe_ba }}.{{ chosen_domain }};
    {% elif inventory_hostname in groups['zabbix_servers'] %}
    server_name www.{{ zabbix }}.{{ chosen_domain }};
    {% elif inventory_hostname in groups['kibana_servers'] %}
    server_name www.{{ kibana }}.{{ chosen_domain }};
    {% endif %}
    set         $base /var/www/{{ inventory_hostname }}.{{ chosen_domain }}/;
    root        $base;
    # security headers
    add_header X-XSS-Protection       "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy        "no-referrer" always;
    add_header Permissions-Policy     "interest-cohort=()" always;

    # . files
    location ~ /\.(?!well-known) {
        deny all;
    }

    # restrict methods
    if ($request_method !~ ^(GET|POST|PUT|DELETE|HEAD)$) {
        return '404';
    }

    # logging
    access_log /var/log/nginx/{{ inventory_hostname }}.{{ chosen_domain }}/{{ inventory_hostname }}.{{ chosen_domain }}.access.log;
    error_log  /var/log/nginx/{{ inventory_hostname }}.{{ chosen_domain }}/{{ inventory_hostname }}.{{ chosen_domain }}.error.log warn;

    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log    off;
    }

    # robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log    off;
    }

    # gzip
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    {% if inventory_hostname in groups['wordpress_servers'] or inventory_hostname in groups['zabbix_servers'] %}
    # index.php
    index      index.php;

    # index.php fallback
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # handle .php
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/{{ php_version }}-fpm.sock;
        # 404
        try_files                     $fastcgi_script_name =404;

        # default fastcgi_params
        include                       fastcgi_params;

        # fastcgi settings
        fastcgi_index                 index.php;
        fastcgi_buffers               8 16k;
        fastcgi_buffer_size           32k;

        # fastcgi params
        fastcgi_param DOCUMENT_ROOT   $realpath_root;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param PHP_ADMIN_VALUE "open_basedir=$base/:/usr/lib/php/:/tmp/";
    }
    {% if inventory_hostname in groups['wordpress_servers'] %}

    # WordPress: deny wp-content, wp-includes php files
    location ~* ^/(?:wp-content|wp-includes)/.*\.php$ {
        deny all;
    }

    # WordPress: deny wp-content/uploads nasty stuff
    location ~* ^/wp-content/uploads/.*\.(?:s?html?|php|js|swf)$ {
        deny all;
    }

    # WordPress: SEO plugin
    location ~* ^/wp-content/plugins/wordpress-seo(?:-premium)?/css/main-sitemap\.xsl$ {}

    # WordPress: deny wp-content/plugins (except earlier rules)
    location ~ ^/wp-content/plugins {
        deny all;
    }

    # WordPress: deny general stuff
    location ~* ^/(?:xmlrpc\.php|wp-links-opml\.php|wp-config\.php|wp-config-sample\.php|readme\.html|license\.txt)$ {
        deny all;
    }
    {% endif %}
    {% endif %}
    {% if inventory_hostname in groups['kibana_servers'] %}
    # reverse proxy
    location / {
        proxy_pass http://{{ hostvars[groups['kibana_servers'][0]].ansible_host }}:5601;
        proxy_http_version                 1.1;
        proxy_cache_bypass                 $http_upgrade;

        # Proxy headers
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header Forwarded         $proxy_add_forwarded;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;

        # Proxy timeouts
        proxy_connect_timeout              60s;
        proxy_send_timeout                 60s;
        proxy_read_timeout                 60s;
            }
    {% endif %}
}
