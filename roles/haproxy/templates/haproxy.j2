#jinja2: lstrip_blocks: True, trim_blocks: True
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode tcp
	timeout connect 5000
    timeout client 50000
    timeout server 50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


{% if inventory_hostname in groups['internal_lbs'] %}
frontend haproxy
	bind :443 ssl crt /etc/ssl/certs/haproxy.pem
	mode http
	option httplog
	reqadd X-Forwarded-Proto:\ https
	acl status_acl hdr(host) -i haproxy-status.com
		use_backend stats if status_acl
	acl kibana_acl hdr(host) -i www.{{ kibana }}.{{ chosen_domain }}
		use_backend kibana_server if kibana_acl
	acl wordpress_acl hdr(host) -i www.{{ fe_ba }}.{{ chosen_domain }}
		use_backend wordpress_server if wordpress_acl
	acl zabbix_acl hdr(host) -i www.{{ zabbix }}.{{ chosen_domain }}
		use_backend zabbix_server if zabbix_acl

listen elasticsearch-cluster
	bind {{ internal_lb_vip }}:9200
	mode tcp
	option tcpka
	option tcplog
	balance roundrobin
	{% for item in groups['elastic_servers'] %}
	server {{ item }} {{ hostvars[item].ansible_host }}:9200 check 
	{% endfor %}

backend kibana_server
	timeout connect 10s
	timeout server 20s
	mode http
	balance roundrobin
	{% for item in groups['kibana_servers'] %}
	server {{ item }} {{ hostvars[item].ansible_host }}:80 check 
	{% endfor %}

backend zabbix_server
	timeout connect 10s
	timeout server 10s
	mode http
	balance roundrobin
	{% for item in groups['zabbix_servers'] %}
	server {{ item }} {{ hostvars[item].ansible_host }}:80 check
	{% endfor %}	

backend wordpress_server
	timeout connect 10s
	timeout server 20s 
	mode http
	balance roundrobin
	option tcp-check
	{% for item in groups['wordpress_servers'] %}
	server {{ item }} {{ hostvars[item].ansible_host }}:80 check
	{% endfor %}

listen galera_cluster
	bind {{ ansible_host }}:3306
	balance roundrobin
	mode tcp
	option tcpka
	option mysql-check user haproxy
	{% for item in groups['galera_servers'] %}
	server {{ item }} {{ hostvars[item].ansible_host }}:3306 check weight 1
	{% endfor %}
{% endif %}
{% if inventory_hostname in groups['external_lbs'] %}
frontend haproxy
	bind :443 ssl crt /etc/ssl/certs/haproxy.pem
	mode tcp
	option tcplog
	acl status_acl hdr(host) -i haproxy-status.com
		use_backend stats if status_acl
	acl int-haproxy_acl hdr(host) -i www.{{ fe_ba }}.{{ chosen_domain }}
		use_backend int-haproxy if int-haproxy_acl

	backend int-haproxy
		timeout connect 10s
		timeout server 20s 
		mode tcp
		balance roundrobin
		option tcp-check
		server {{ groups['internal_lbs'][0] }} {{ hostvars[groups['internal_lbs'][0]].haproxy_vip }}:443 check ssl check-ssl verify none 
{% endif %}

backend stats
	mode http
	stats enable
	stats uri /
	stats refresh 10s
	stats show-legends
	stats admin if TRUE
